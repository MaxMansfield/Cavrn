.TH "nrf24.h" 3 "Thu Feb 19 2015" "Version 0.1.0" "Cavrn AVR8 Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nrf24.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'spi\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBnrf24_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCONFIG\fP   0x00"
.br
.ti -1c
.RI "#define \fBEN_AA\fP   0x01"
.br
.ti -1c
.RI "#define \fBEN_RXADDR\fP   0x02"
.br
.ti -1c
.RI "#define \fBSETUP_AW\fP   0x03"
.br
.ti -1c
.RI "#define \fBSETUP_RETR\fP   0x04"
.br
.ti -1c
.RI "#define \fBRF_CH\fP   0x05"
.br
.ti -1c
.RI "#define \fBRF_SETUP\fP   0x06"
.br
.ti -1c
.RI "#define \fBSTATUS\fP   0x07"
.br
.ti -1c
.RI "#define \fBOBSERVE_TX\fP   0x08"
.br
.ti -1c
.RI "#define \fBCD\fP   0x09"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P0\fP   0x0A"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P1\fP   0x0B"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P2\fP   0x0C"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P3\fP   0x0D"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P4\fP   0x0E"
.br
.ti -1c
.RI "#define \fBRX_ADDR_P5\fP   0x0F"
.br
.ti -1c
.RI "#define \fBTX_ADDR\fP   0x10"
.br
.ti -1c
.RI "#define \fBRX_PW_P0\fP   0x11"
.br
.ti -1c
.RI "#define \fBRX_PW_P1\fP   0x12"
.br
.ti -1c
.RI "#define \fBRX_PW_P2\fP   0x13"
.br
.ti -1c
.RI "#define \fBRX_PW_P3\fP   0x14"
.br
.ti -1c
.RI "#define \fBRX_PW_P4\fP   0x15"
.br
.ti -1c
.RI "#define \fBRX_PW_P5\fP   0x16"
.br
.ti -1c
.RI "#define \fBFIFO_STATUS\fP   0x17"
.br
.ti -1c
.RI "#define \fBDYNPD\fP   0x1C"
.br
.ti -1c
.RI "#define \fBMASK_RX_DR\fP   6"
.br
.ti -1c
.RI "#define \fBMASK_TX_DS\fP   5"
.br
.ti -1c
.RI "#define \fBMASK_MAX_RT\fP   4"
.br
.ti -1c
.RI "#define \fBEN_CRC\fP   3"
.br
.ti -1c
.RI "#define \fBCRCO\fP   2"
.br
.ti -1c
.RI "#define \fBPWR_UP\fP   1"
.br
.ti -1c
.RI "#define \fBPRIM_RX\fP   0"
.br
.ti -1c
.RI "#define \fBENAA_P5\fP   5"
.br
.ti -1c
.RI "#define \fBENAA_P4\fP   4"
.br
.ti -1c
.RI "#define \fBENAA_P3\fP   3"
.br
.ti -1c
.RI "#define \fBENAA_P2\fP   2"
.br
.ti -1c
.RI "#define \fBENAA_P1\fP   1"
.br
.ti -1c
.RI "#define \fBENAA_P0\fP   0"
.br
.ti -1c
.RI "#define \fBERX_P5\fP   5"
.br
.ti -1c
.RI "#define \fBERX_P4\fP   4"
.br
.ti -1c
.RI "#define \fBERX_P3\fP   3"
.br
.ti -1c
.RI "#define \fBERX_P2\fP   2"
.br
.ti -1c
.RI "#define \fBERX_P1\fP   1"
.br
.ti -1c
.RI "#define \fBERX_P0\fP   0"
.br
.ti -1c
.RI "#define \fBAW\fP   0 /* 2 bits */"
.br
.ti -1c
.RI "#define \fBARD\fP   4 /* 4 bits */"
.br
.ti -1c
.RI "#define \fBARC\fP   0 /* 4 bits */"
.br
.ti -1c
.RI "#define \fBPLL_LOCK\fP   4"
.br
.ti -1c
.RI "#define \fBRF_DR\fP   3"
.br
.ti -1c
.RI "#define \fBRF_PWR\fP   1 /* 2 bits */"
.br
.ti -1c
.RI "#define \fBRX_DR\fP   6"
.br
.ti -1c
.RI "#define \fBTX_DS\fP   5"
.br
.ti -1c
.RI "#define \fBMAX_RT\fP   4"
.br
.ti -1c
.RI "#define \fBRX_P_NO\fP   1 /* 3 bits */"
.br
.ti -1c
.RI "#define \fBTX_FULL\fP   0"
.br
.ti -1c
.RI "#define \fBPLOS_CNT\fP   4 /* 4 bits */"
.br
.ti -1c
.RI "#define \fBARC_CNT\fP   0 /* 4 bits */"
.br
.ti -1c
.RI "#define \fBTX_REUSE\fP   6"
.br
.ti -1c
.RI "#define \fBFIFO_FULL\fP   5"
.br
.ti -1c
.RI "#define \fBTX_EMPTY\fP   4"
.br
.ti -1c
.RI "#define \fBRX_FULL\fP   1"
.br
.ti -1c
.RI "#define \fBRX_EMPTY\fP   0"
.br
.ti -1c
.RI "#define \fBDPL_P0\fP   0"
.br
.ti -1c
.RI "#define \fBDPL_P1\fP   1"
.br
.ti -1c
.RI "#define \fBDPL_P2\fP   2"
.br
.ti -1c
.RI "#define \fBDPL_P3\fP   3"
.br
.ti -1c
.RI "#define \fBDPL_P4\fP   4"
.br
.ti -1c
.RI "#define \fBDPL_P5\fP   5"
.br
.ti -1c
.RI "#define \fBR_REGISTER\fP   0x00 /* last 4 bits will indicate reg\&. address */"
.br
.ti -1c
.RI "#define \fBW_REGISTER\fP   0x20 /* last 4 bits will indicate reg\&. address */"
.br
.ti -1c
.RI "#define \fBREGISTER_MASK\fP   0x1F"
.br
.ti -1c
.RI "#define \fBR_RX_PAYLOAD\fP   0x61"
.br
.ti -1c
.RI "#define \fBW_TX_PAYLOAD\fP   0xA0"
.br
.ti -1c
.RI "#define \fBFLUSH_TX\fP   0xE1"
.br
.ti -1c
.RI "#define \fBFLUSH_RX\fP   0xE2"
.br
.ti -1c
.RI "#define \fBREUSE_TX_PL\fP   0xE3"
.br
.ti -1c
.RI "#define \fBACTIVATE\fP   0x50"
.br
.ti -1c
.RI "#define \fBR_RX_PL_WID\fP   0x60"
.br
.ti -1c
.RI "#define \fBNOP\fP   0xFF"
.br
.ti -1c
.RI "#define \fBLOW\fP   0"
.br
.ti -1c
.RI "#define \fBHIGH\fP   1"
.br
.ti -1c
.RI "#define \fBnrf24_ADDR_LEN\fP   5"
.br
.ti -1c
.RI "#define \fBnrf24_CONFIG\fP   (_BV(\fBEN_CRC\fP)|(0<<\fBCRCO\fP))"
.br
.ti -1c
.RI "#define \fBNRF24_TRANSMISSON_OK\fP   0"
.br
.ti -1c
.RI "#define \fBNRF24_MESSAGE_LOST\fP   1"
.br
.ti -1c
.RI "#define \fBnrf24_ce_digitalWrite\fP(\fBLOW\fP)   CE_DDR &= ~_BV(CE_PIN)"
.br
.ti -1c
.RI "#define \fBnrf24_ce_digitalWrite\fP(\fBHIGH\fP)   CE_DDR |= _BV(CE_PIN)"
.br
.ti -1c
.RI "#define \fBnrf24_csn_digitalWrite\fP(\fBHIGH\fP)   SPI_DDR |= _BV(SPI_SS)"
.br
.ti -1c
.RI "#define \fBnrf24_csn_digitalWrite\fP(\fBLOW\fP)   SPI_DDR &= ~_BV(SPI_SS)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBnrf24_init\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_rx_address\fP (const \fBbyte\fP *const adr)"
.br
.ti -1c
.RI "void \fBnrf24_tx_address\fP (const \fBbyte\fP *const adr)"
.br
.ti -1c
.RI "void \fBnrf24_config\fP (const uint8_t channel, const uint8_t pay_length)"
.br
.ti -1c
.RI "bool \fBnrf24_dataReady\fP ()"
.br
.ti -1c
.RI "bool \fBnrf24_isSending\fP ()"
.br
.ti -1c
.RI "uint8_t \fBnrf24_getStatus\fP ()"
.br
.ti -1c
.RI "bool \fBnrf24_rxFifoEmpty\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_send\fP (const \fBbyte\fP *const value)"
.br
.ti -1c
.RI "void \fBnrf24_getData\fP (\fBbyte\fP *const data)"
.br
.ti -1c
.RI "uint8_t \fBnrf24_payloadLength\fP ()"
.br
.ti -1c
.RI "uint8_t \fBnrf24_lastMessageStatus\fP ()"
.br
.ti -1c
.RI "uint8_t \fBnrf24_retransmissionCount\fP ()"
.br
.ti -1c
.RI "uint8_t \fBnrf24_payload_length\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_powerUpRx\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_powerUpTx\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_powerDown\fP ()"
.br
.ti -1c
.RI "void \fBnrf24_configRegister\fP (const \fBbyte\fP reg, const \fBbyte\fP value)"
.br
.ti -1c
.RI "void \fBnrf24_readRegister\fP (const \fBbyte\fP reg, \fBbyte\fP *const value, const uint8_t len)"
.br
.ti -1c
.RI "void \fBnrf24_writeRegister\fP (const \fBbyte\fP reg, const \fBbyte\fP *const value, const uint8_t len)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static struct \fBnrf24_t\fP \fBNrf24\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ACTIVATE   0x50"

.PP
Definition at line 132 of file nrf24\&.h\&.
.SS "#define ARC   0 /* 4 bits */"

.PP
Definition at line 90 of file nrf24\&.h\&.
.SS "#define ARC_CNT   0 /* 4 bits */"

.PP
Definition at line 106 of file nrf24\&.h\&.
.SS "#define ARD   4 /* 4 bits */"

.PP
Definition at line 89 of file nrf24\&.h\&.
.SS "#define AW   0 /* 2 bits */"

.PP
Definition at line 86 of file nrf24\&.h\&.
.SS "#define CD   0x09"

.PP
Definition at line 41 of file nrf24\&.h\&.
.SS "#define CONFIG   0x00"

.PP
Definition at line 32 of file nrf24\&.h\&.
.SS "#define CRCO   2"

.PP
Definition at line 65 of file nrf24\&.h\&.
.SS "#define DPL_P0   0"

.PP
Definition at line 116 of file nrf24\&.h\&.
.SS "#define DPL_P1   1"

.PP
Definition at line 117 of file nrf24\&.h\&.
.SS "#define DPL_P2   2"

.PP
Definition at line 118 of file nrf24\&.h\&.
.SS "#define DPL_P3   3"

.PP
Definition at line 119 of file nrf24\&.h\&.
.SS "#define DPL_P4   4"

.PP
Definition at line 120 of file nrf24\&.h\&.
.SS "#define DPL_P5   5"

.PP
Definition at line 121 of file nrf24\&.h\&.
.SS "#define DYNPD   0x1C"

.PP
Definition at line 56 of file nrf24\&.h\&.
.SS "#define EN_AA   0x01"

.PP
Definition at line 33 of file nrf24\&.h\&.
.SS "#define EN_CRC   3"

.PP
Definition at line 64 of file nrf24\&.h\&.
.SS "#define EN_RXADDR   0x02"

.PP
Definition at line 34 of file nrf24\&.h\&.
.SS "#define ENAA_P0   0"

.PP
Definition at line 75 of file nrf24\&.h\&.
.SS "#define ENAA_P1   1"

.PP
Definition at line 74 of file nrf24\&.h\&.
.SS "#define ENAA_P2   2"

.PP
Definition at line 73 of file nrf24\&.h\&.
.SS "#define ENAA_P3   3"

.PP
Definition at line 72 of file nrf24\&.h\&.
.SS "#define ENAA_P4   4"

.PP
Definition at line 71 of file nrf24\&.h\&.
.SS "#define ENAA_P5   5"

.PP
Definition at line 70 of file nrf24\&.h\&.
.SS "#define ERX_P0   0"

.PP
Definition at line 83 of file nrf24\&.h\&.
.SS "#define ERX_P1   1"

.PP
Definition at line 82 of file nrf24\&.h\&.
.SS "#define ERX_P2   2"

.PP
Definition at line 81 of file nrf24\&.h\&.
.SS "#define ERX_P3   3"

.PP
Definition at line 80 of file nrf24\&.h\&.
.SS "#define ERX_P4   4"

.PP
Definition at line 79 of file nrf24\&.h\&.
.SS "#define ERX_P5   5"

.PP
Definition at line 78 of file nrf24\&.h\&.
.SS "#define FIFO_FULL   5"

.PP
Definition at line 110 of file nrf24\&.h\&.
.SS "#define FIFO_STATUS   0x17"

.PP
Definition at line 55 of file nrf24\&.h\&.
.SS "#define FLUSH_RX   0xE2"

.PP
Definition at line 130 of file nrf24\&.h\&.
.SS "#define FLUSH_TX   0xE1"

.PP
Definition at line 129 of file nrf24\&.h\&.
.SS "#define HIGH   1"

.PP
Definition at line 152 of file nrf24\&.h\&.
.SS "#define LOW   0"

.PP
Definition at line 151 of file nrf24\&.h\&.
.SS "#define MASK_MAX_RT   4"

.PP
Definition at line 63 of file nrf24\&.h\&.
.SS "#define MASK_RX_DR   6"

.PP
Definition at line 61 of file nrf24\&.h\&.
.SS "#define MASK_TX_DS   5"

.PP
Definition at line 62 of file nrf24\&.h\&.
.SS "#define MAX_RT   4"

.PP
Definition at line 100 of file nrf24\&.h\&.
.SS "#define NOP   0xFF"

.PP
Definition at line 134 of file nrf24\&.h\&.
.SS "#define nrf24_ADDR_LEN   5"

.PP
Definition at line 154 of file nrf24\&.h\&.
.SS "#define nrf24_ce_digitalWrite(\fBLOW\fP)   CE_DDR &= ~_BV(CE_PIN)"

.PP
Definition at line 259 of file nrf24\&.h\&.
.SS "#define nrf24_ce_digitalWrite(\fBHIGH\fP)   CE_DDR |= _BV(CE_PIN)"

.PP
Definition at line 259 of file nrf24\&.h\&.
.SS "#define nrf24_CONFIG   (_BV(\fBEN_CRC\fP)|(0<<\fBCRCO\fP))"

.PP
Definition at line 155 of file nrf24\&.h\&.
.SS "#define nrf24_csn_digitalWrite(\fBHIGH\fP)   SPI_DDR |= _BV(SPI_SS)"

.PP
Definition at line 262 of file nrf24\&.h\&.
.SS "#define nrf24_csn_digitalWrite(\fBLOW\fP)   SPI_DDR &= ~_BV(SPI_SS)"

.PP
Definition at line 262 of file nrf24\&.h\&.
.SS "#define NRF24_MESSAGE_LOST   1"

.PP
Definition at line 158 of file nrf24\&.h\&.
.SS "#define NRF24_TRANSMISSON_OK   0"

.PP
Definition at line 157 of file nrf24\&.h\&.
.SS "#define OBSERVE_TX   0x08"

.PP
Definition at line 40 of file nrf24\&.h\&.
.SS "#define PLL_LOCK   4"

.PP
Definition at line 93 of file nrf24\&.h\&.
.SS "#define PLOS_CNT   4 /* 4 bits */"

.PP
Definition at line 105 of file nrf24\&.h\&.
.SS "#define PRIM_RX   0"

.PP
Definition at line 67 of file nrf24\&.h\&.
.SS "#define PWR_UP   1"

.PP
Definition at line 66 of file nrf24\&.h\&.
.SS "#define R_REGISTER   0x00 /* last 4 bits will indicate reg\&. address */"

.PP
Definition at line 124 of file nrf24\&.h\&.
.SS "#define R_RX_PAYLOAD   0x61"

.PP
Definition at line 127 of file nrf24\&.h\&.
.SS "#define R_RX_PL_WID   0x60"

.PP
Definition at line 133 of file nrf24\&.h\&.
.SS "#define REGISTER_MASK   0x1F"

.PP
Definition at line 126 of file nrf24\&.h\&.
.SS "#define REUSE_TX_PL   0xE3"

.PP
Definition at line 131 of file nrf24\&.h\&.
.SS "#define RF_CH   0x05"

.PP
Definition at line 37 of file nrf24\&.h\&.
.SS "#define RF_DR   3"

.PP
Definition at line 94 of file nrf24\&.h\&.
.SS "#define RF_PWR   1 /* 2 bits */"

.PP
Definition at line 95 of file nrf24\&.h\&.
.SS "#define RF_SETUP   0x06"

.PP
Definition at line 38 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P0   0x0A"

.PP
Definition at line 42 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P1   0x0B"

.PP
Definition at line 43 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P2   0x0C"

.PP
Definition at line 44 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P3   0x0D"

.PP
Definition at line 45 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P4   0x0E"

.PP
Definition at line 46 of file nrf24\&.h\&.
.SS "#define RX_ADDR_P5   0x0F"

.PP
Definition at line 47 of file nrf24\&.h\&.
.SS "#define RX_DR   6"

.PP
Definition at line 98 of file nrf24\&.h\&.
.SS "#define RX_EMPTY   0"

.PP
Definition at line 113 of file nrf24\&.h\&.
.SS "#define RX_FULL   1"

.PP
Definition at line 112 of file nrf24\&.h\&.
.SS "#define RX_P_NO   1 /* 3 bits */"

.PP
Definition at line 101 of file nrf24\&.h\&.
.SS "#define RX_PW_P0   0x11"

.PP
Definition at line 49 of file nrf24\&.h\&.
.SS "#define RX_PW_P1   0x12"

.PP
Definition at line 50 of file nrf24\&.h\&.
.SS "#define RX_PW_P2   0x13"

.PP
Definition at line 51 of file nrf24\&.h\&.
.SS "#define RX_PW_P3   0x14"

.PP
Definition at line 52 of file nrf24\&.h\&.
.SS "#define RX_PW_P4   0x15"

.PP
Definition at line 53 of file nrf24\&.h\&.
.SS "#define RX_PW_P5   0x16"

.PP
Definition at line 54 of file nrf24\&.h\&.
.SS "#define SETUP_AW   0x03"

.PP
Definition at line 35 of file nrf24\&.h\&.
.SS "#define SETUP_RETR   0x04"

.PP
Definition at line 36 of file nrf24\&.h\&.
.SS "#define STATUS   0x07"

.PP
Definition at line 39 of file nrf24\&.h\&.
.SS "#define TX_ADDR   0x10"

.PP
Definition at line 48 of file nrf24\&.h\&.
.SS "#define TX_DS   5"

.PP
Definition at line 99 of file nrf24\&.h\&.
.SS "#define TX_EMPTY   4"

.PP
Definition at line 111 of file nrf24\&.h\&.
.SS "#define TX_FULL   0"

.PP
Definition at line 102 of file nrf24\&.h\&.
.SS "#define TX_REUSE   6"

.PP
Definition at line 109 of file nrf24\&.h\&.
.SS "#define W_REGISTER   0x20 /* last 4 bits will indicate reg\&. address */"

.PP
Definition at line 125 of file nrf24\&.h\&.
.SS "#define W_TX_PAYLOAD   0xA0"

.PP
Definition at line 128 of file nrf24\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void nrf24_config (const uint8_t channel, const uint8_t pay_length)"

.PP
Definition at line 38 of file nrf24\&.c\&.
.SS "void nrf24_configRegister (const \fBbyte\fP reg, const \fBbyte\fP value)"

.PP
Definition at line 280 of file nrf24\&.c\&.
.SS "bool nrf24_dataReady ()"

.PP
Definition at line 100 of file nrf24\&.c\&.
.SS "void nrf24_getData (\fBbyte\fP *const data)"

.PP
Definition at line 137 of file nrf24\&.c\&.
.SS "uint8_t nrf24_getStatus ()"

.PP
Definition at line 219 of file nrf24\&.c\&.
.SS "void nrf24_init ()"

.PP
Definition at line 19 of file nrf24\&.c\&.
.SS "bool nrf24_isSending ()"

.PP
Definition at line 202 of file nrf24\&.c\&.
.SS "uint8_t nrf24_lastMessageStatus ()"

.PP
Definition at line 228 of file nrf24\&.c\&.
.SS "uint8_t nrf24_payload_length ()"

.PP
Definition at line 85 of file nrf24\&.c\&.
.SS "uint8_t nrf24_payloadLength ()"

.PP
Definition at line 126 of file nrf24\&.c\&.
.SS "void nrf24_powerDown ()"

.PP
Definition at line 272 of file nrf24\&.c\&.
.SS "void nrf24_powerUpRx ()"

.PP
Definition at line 252 of file nrf24\&.c\&.
.SS "void nrf24_powerUpTx ()"

.PP
Definition at line 265 of file nrf24\&.c\&.
.SS "void nrf24_readRegister (const \fBbyte\fP reg, \fBbyte\fP *const value, const uint8_t len)"

.PP
Definition at line 289 of file nrf24\&.c\&.
.SS "uint8_t nrf24_retransmissionCount ()"

.PP
Definition at line 156 of file nrf24\&.c\&.
.SS "void nrf24_rx_address (const \fBbyte\fP *const adr)"

.PP
Definition at line 77 of file nrf24\&.c\&.
.SS "bool nrf24_rxFifoEmpty ()"

.PP
Definition at line 116 of file nrf24\&.c\&.
.SS "void nrf24_send (const \fBbyte\fP *const value)"

.PP
Definition at line 166 of file nrf24\&.c\&.
.SS "void nrf24_tx_address (const \fBbyte\fP *const adr)"

.PP
Definition at line 91 of file nrf24\&.c\&.
.SS "void nrf24_writeRegister (const \fBbyte\fP reg, const \fBbyte\fP *const value, const uint8_t len)"

.PP
Definition at line 298 of file nrf24\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "struct \fBnrf24_t\fP Nrf24\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
  
  \&.init =   &nrf24_init,
  \&.txAddr = &nrf24_tx_address,
  \&.rxAddr = &nrf24_rx_address,
  \&.config = &nrf24_config,

  
  \&.dataReady = &nrf24_dataReady,
  \&.isSending = &nrf24_isSending,
  \&.getStatus = &nrf24_getStatus,
  \&.rxWaiting = &nrf24_rxFifoEmpty,

  \&.txData= &nrf24_send,
  \&.rxData = &nrf24_getData,

  
  \&.paylength = &nrf24_payload_length,

   
  \&.lastTxStatus = &nrf24_lastMessageStatus,
  \&.badTxCount = &nrf24_retransmissionCount,
    
  
  \&.powerRx = &nrf24_powerUpRx,
  \&.powerTx = &nrf24_powerUpTx,
  \&.powerDown = &nrf24_powerDown,

  \&.payload_len = 0
}
.fi
.PP
Definition at line 264 of file nrf24\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Cavrn AVR8 Library from the source code\&.
